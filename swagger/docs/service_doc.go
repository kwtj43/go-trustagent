/*
 * Copyright (C) 2020 Intel Corporation
 * SPDX-License-Identifier: BSD-3-Clause
 */
package docs

import (
	"intel/isecl/go-trust-agent/v3/resource"
)

// TpmQuoteRequestInfo request payload
// swagger:parameters TpmQuoteRequestInfo
type TpmQuoteRequestInfo struct {
	// in:body
	Body resource.TpmQuoteRequest
}

// TpmQuoteResponseInfo response payload
// swagger:response TpmQuoteResponseInfo
type TpmQuoteResponseInfo struct {
	// in:body
	Body resource.TpmQuoteResponse
}

// TagWriteRequestInfo request payload
// swagger:parameters TagWriteRequestInfo
type TagWriteRequestInfo struct {
	// in:body
	Body resource.TagWriteRequest
}

// swagger:operation GET /host Host getHostInfo
// ---
// description: |
//   Retrieves the host specific information from the host.
//   A valid bearer token should be provided to authorize this REST call.
//
// security:
//  - bearerAuth: []
// produces:
//  - application/json
// responses:
//   '200':
//     description: Successfully retrieved the host specific information from the host.
//     schema:
//       type: string
//
// x-sample-call-endpoint: https://trustagent.server.com:1443/v2/host
// x-sample-call-output: |
//  {
//    "errorCode": 0,
//    "os_name": "RedHatEnterprise",
//    "os_version": "8.1",
//    "bios_version": "SE5C620.86B.00.01.0014.070920180847",
//    "vmm_name": "Virsh",
//    "vmm_version": "4.5.0",
//    "processor_info": "54 06 05 00 FF FB EB BF",
//    "host_name": "127.0.0.1",
//    "bios_name": "Intel Corporation",
//    "hardware_uuid": "0018013a-96a4-e811-906e-00163566263e",
//    "process_flags": "FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE-36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE",
//    "tpm_version": "2.0",
//    "pcr_banks": [
//        "SHA1",
//        "SHA256"
//    ],
//    "no_of_sockets": "2",
//    "tpm_enabled": "true",
//    "txt_enabled": "true",
//    "tboot_installed": "false",
//    "is_docker_env": "false",
//    "hardware_features": {
//        "TXT": {
//            "enabled": "true"
//        },
//        "TPM": {
//            "enabled": "true",
//            "meta": {
//                "tpm_version": "2.0",
//                "pcr_banks": "SHA1_SHA256"
//            }
//        }
//    },
//    "installed_components": [
//        "tagent",
//        "wlagent"
//    ]
//  }
// ---

// swagger:operation GET /aik Host getAik
// ---
// description: |
//    Retrieves the Attestation Identity Key (AIK) for the host.
//    The Trust Agent provisioning involves connecting to Verification Service and
//    creation of a new Attestation Identity Keypair in the Trusted Platform Module.
//    The AIK is an asymmetric keypair generated by the host's TPM. This AIK is used
//    by Verification Service to verify the integrity of the attestation quotes from the
//    hostâ€™s TPM. A valid bearer token should be provided to authorize this REST call.
//
// security:
//  - bearerAuth: []
// produces:
//  - application/octet-stream
// responses:
//   '200':
//     description: Successfully retrieved the Attestation Identity Key for the host.
//     schema:
//       type: string
//
// x-sample-call-endpoint: https://trustagent.server.com:1443/v2/aik
// x-sample-call-output: |
//    200 OK [5 bytes data]
// ---

// swagger:operation POST /tpm/quote Host getTpmQuote
// ---
//
// description: |
//   Retrieves a AIK signed quote from TPM. It contains signed data with selected PCRs and a signature.
//   A valid bearer token should be provided to authorize this REST call.
//
// security:
//  - bearerAuth: []
// consumes:
//  - application/json
// produces:
//  - application/xml
// parameters:
// - name: request body
//   in: body
//   required: true
//   description: |
//    The TpmQuoteRequest XML structure respresents the content of the request body which contains the following attributes:
//           - nonce         - The nonce value is 20 bytes base64-encoded. The client chooses the nonce. The trust agent will
//                                  automatically extend its IP address to the nonce before using it in the quote. The extend operation is
//                                  nonce1 = sha1( nonce0 || ip-address ) where nonce0 is the original input nonce (20 bytes) and nonce1
//                                  is the extended nonce used in the TPM quote (20 bytes), and the ip-address is the 4-byte encoding of
//                                  the IP address.
//           - pcrs            - List of PCRs for which the quote is needed.
//           - pcrBanks    - TPM PCR bank to read.
//   schema:
//     "$ref": "#/definitions/TpmQuoteRequest"
// responses:
//   '200':
//     description: Successfully retrieved the AIK signed quote from TPM.
//     schema:
//       "$ref": "#/definitions/TpmQuoteResponse"
//
// x-sample-call-endpoint: https://trustagent.server.com:1443/v2/tpm/quote
// x-sample-call-input: |
//    {
//        "nonce": "tHgfRQED1+pYgEZpq3dZC9ONmBCZKdx10LErTZs1k/k=",
//        "pcrs": [
//            0,
//            17,
//            18,
//            19
//        ],
//        "pcrbanks": [
//            "SHA1",
//            "SHA256"
//        ]
//    }
// x-sample-call-output: |
//   &lt;tpm_quote_response&gt;
//       &lt;timestamp&gt;1586875523&lt;/timestamp&gt;
//       &lt;clientIp&gt;10.105.167.189&lt;/clientIp&gt;
//       &lt;errorCode&gt;0&lt;/errorCode&gt;
//       &lt;errorMessage&gt;OK&lt;/errorMessage&gt;
//       &lt;aik&gt;LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWJXZ0F3SUJBZ0lHQVhGeTBZc2lNQTBHQ1NxR1NJYjNEUUVCtCg...&lt;/aik&gt;
//       &lt;quote&gt;AIv/VENHgBgAIgALxjsihT/qad5fq9lEOf2C+h46n4k+72CF3V8NOHXRBF0AFOLEYYGbctEyN2JIIqmIO+MOjuofAAAAAAY1Y...&lt;/quote&gt;
//       &lt;eventLog&gt;PG1lYXN1cmVMb2c+PHR4dD48dHh0U3RhdHVzPjA8L3R4dFN0YXR1cz48L3R4dD48L21lYXN1cmVMb2c+&lt;/eventLog&gt;
//       &lt;tcbMeasurements&gt;&lt;/tcbMeasurements&gt;
//       &lt;selectedPcrBanks&gt;
//           &lt;selectedPcrBanks&gt;SHA1&lt;/selectedPcrBanks&gt;
//           &lt;selectedPcrBanks&gt;SHA256&lt;/selectedPcrBanks&gt;
//       &lt;/selectedPcrBanks&gt;
//       &lt;isTagProvisioned&gt;true&lt;/isTagProvisioned&gt;
//       &lt;assetTag&gt;tHgfRQED1+pYgEZpq3dZC9ONmBCZKdx10LErTZs1k/k=&lt;/assetTag&gt;
//   &lt;/tpm_quote_response&gt;
// ---

// swagger:operation GET /binding-key-certificate Host getBindingKeyCertificate
// ---
// description: |
//   Retrieves the TPM binding key certificate.
//   A valid bearer token should be provided to authorize this REST call.
//
// security:
//  - bearerAuth: []
// produces:
//  - application/x-pem-file
// responses:
//   '200':
//     description: Successfully retrieved the TPM binding key certificate.
//     schema:
//       type: string
//
// x-sample-call-endpoint: https://trustagent.server.com:1443/v2/binding-key-certificate
// x-sample-call-output: |
//  -----BEGIN CERTIFICATE-----
//  MIIFITCCA4mgAwIBAgIJAOyhSapXy8z9MA0GCSqGSIb3DQEBDAUAMBsxGTAXBgNV
//  BAMTEG10d2lsc29uLXBjYS1haWswHhcNMjAwNDE0MTQxOTA0WhcNMzAwNDEyMTQx
//  OTA0WjAlMSMwIQYDVQQDDBpDTj1CaW5kaW5nX0tleV9DZXJ0aWZpY2F0ZTCCASIw
//  DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALL+APCQqbJT/fiFKCKARe5zRmMW
//  6Qy5nSCb2gR2JBb9xNTpGunrbZpIUvkVOwuEvaL2sO+TpPNCEy/wDXJ9JlWFkysk
//  YUj4okjRgdHzap6NgBqS+Wjl2KUtejDRJl73nTMSsD1/1gMbslsSvqN5wxtltfzG
//  P/KkKs91RaO63X1+Dt9UTLGpLBtuqFzenqiZk61ofeu8Q1rjHuM+lBsHjK1bblBH
//  pvpnPzW7dXtIjwKw+WqPDbHW9fjt1J//yRaeitqx/fZdkw3MH1XUvpOgm2pQL3xW
//  aHnWUngu6Bsg3UZZBgRjSYPMjAxMkdUhiSth9Nh51WJWTXW/aeVk/Y0on7kCAwEA
//  AaOCAdwwggHYMA4GA1UdDwEB/wQEAwIFIDCBnQYHVQSBBQMCKQSBkf9UQ0eAFwAi
//  AAvGOyKFP+pp3l+r2UQ5/YL6HjqfiT7vYIXdXw04ddEEXQAEAP9VqgAAAAAGHPQm
//  AAAADAAAAAABAAcAPgAMNgAAIgALDuPUC0Gbd3SksGIvZkvmfs5f0oYYyFIBO8L9
//  QZP8D6gAIgALWVbXpV9tIAXYRC06YIXKS9rrVpD+he5CHyhJT01BnFUwggEUBghV
//  BIEFAwIpAQSCAQYAFAALAQCW7di8eNjt3++vjiK+ywQrH2/AKGRO9rupKM225Gzg
//  MPxDgvQK/vHb+3qYyzqdCpJg4mzP40JLHvEVh98K3ZZh0p7q3tRLG9Ya9Bk3zuCJ
//  X0O818AS97FCMkWaU2iGDCvyqcZYRWXjR27muL8ZoBCE1ARHnQrM7mi7z6Xqd7Ro
//  y0ZPaQ4bCAbiOeGFgm8wBkD4tor+pWI4uAgnWb1U+HYpLR62ePn2cj9rQp10NVyN
//  k1nHVfThGfg1aStFVxZ2w6hoc4ISCntAtFOZY8HRAG4ST+O6NrXUYWaC8WYWJCar
//  y5e/PrNcGU0aYwi5SnnR4GJChL2dIbiXED7sE8+XHseBMA4GCFUEgQUDAikCBAIA
//  ADANBgkqhkiG9w0BAQwFAAOCAYEAfQdRV1s5cct2GDAL7YtPcU0QgfEj9FZirjr0
//  uGSNS86H42/hItZcQSd/RNX1bzteKA4wYXIqwlYgjcApr6wtKBqGPVY1DZ72eMyC
//  raLnStR/prWVjolsJKmUA6RKktwiw0iDABmfSKeMSxo4e+Pxe94bn1inrTbHL9MA
//  NEdKIJ21Fi8G8zuWxicNxdimbCzfGbfdu+6UXrR+6iSP2QM459K1ug5ip2Kl29Iq
//  tD7ZeID9ws+IiRm9tIhzbj3/l1dEba88KwALMQfpf7PXsiRaQYcIOh7+XzwK0BG9
//  NtNO4yWVDeAPgiWMLIWLjl5O50FLyMkmaeDykdHw7lqul+jamCxm8grbJWJhUnCB
//  P7i0Xo6qXL+FEvgRw7MSWFU82NyGSVHDw/S9qpG8l2vwFZW+75ep2MVxvktmXlWg
//  KUePIrwOQ7rfcut9kaDVwjrz6N6djrbAWcrvEq/L04gHG4h7vMnfFeu+IthRsYck
//  CXBchpwKLivI4RuvHhuADHh7wohP
//  -----END CERTIFICATE-----
// ---

// swagger:operation POST /tag Host setAssetTag
// ---
//
// description: |
//   Writes the sha256 value of the asset tag certificate on to a particular TPM's NVRAM.
//   A valid bearer token should be provided to authorize this REST call.
//
// security:
//  - bearerAuth: []
// consumes:
//  - application/json
// parameters:
// - name: request body
//   in: body
//   required: true
//   description: |
//    The TagWriteRequest JSON structure respresents the content of the request body which contains the following attributes:
//         - tag                        - The tag value is calculated by taking a base 64 encoded value of an Asset Tag certificate.
//         - hardware_uuid     - The hardware UUID of the target host on which the asset tag to be provisioned or deployed.
//   schema:
//     "$ref": "#/definitions/TagWriteRequest"
// responses:
//   '200':
//     description: Successfully wrote sha256 value of the asset tag certificate on to a TPM's NVRAM.
//
// x-sample-call-endpoint: https://trustagent.server.com:1443/v2/tag
// x-sample-call-input: |
//  {
//     "tag": "tHgfRQED1+pYgEZpq3dZC9ONmBCZKdx10LErTZs1k/k=",
//     "hardware_uuid": "0018013a-96a4-e811-906e-00163566263e"
//  }
// x-sample-call-output: |
//    200 OK No Content
// ---

// swagger:operation POST /host/application-measurement Host getApplicationMeasurement
// ---
//
// description: |
//   Measures application manifest provided as an input in the request body and to generate the software flavor.
//   A valid bearer token should be provided to authorize this REST call.
//
// security:
//  - bearerAuth: []
// consumes:
//  - application/xml
// produces:
//  - application/xml
// parameters:
// - name: request body
//   in: body
//   required: true
//   description: |
//     The Manifest XML structure respresents the content of the request body which contains the following attributes:
//           - files                -   List of files can be explicitly specified for measurement.
//           - directories      -   A Directory defines measurement rules for measuring a directory.
//           - symlinks         -   A Symlink entry defines a symbolic link that will be measured.
//   schema:
//     type: string
// responses:
//   '200':
//     description: Successfully measured the provided application manifest.
//     schema:
//       type: string
//
// x-sample-call-endpoint: https://trustagent.server.com:1443/v2/host/application-measurement
// x-sample-call-input: |
//    &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
//    &lt;Manifest xmlns="lib:wml:manifests:1.0" Label="New_Software_Flavor" Uuid="0018013a-96a4-e811-906e-00163566263e" DigestAlg="SHA384"&gt;
//        &lt;Dir Include=".*" Exclude="" Path="/opt/trustagent/hypertext/WEB-INF"/&gt;
//        &lt;Symlink Path="/opt/trustagent/bin/tpm_nvinfo"/&gt;
//        &lt;File Path="/opt/trustagent/bin/module_analysis_da.sh"/&gt;
//    &lt;/Manifest&gt;
// x-sample-call-output: |
//   &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
//   &lt;Measurement xmlns="lib:wml:measurements:1.0" Label="New_Software_Flavor" Uuid="0018013a-96a4-e811-906e-00163566263e" DigestAlg="SHA384"&gt;
//     &lt;File Path="/opt/trustagent/bin/module_analysis_da.sh"&gt;
//        2a99c3e80e99d495a6b8cce8e7504af511201f05fcb40b766a41e6af52a54a34ea9fba985d2835aef929e636ad2a6f1d
//     &lt;/File&gt;
//     &lt;CumulativeHash&gt;
//        17214eee0066d1938feef4d3dd68bc6ac5e1fb953d63e357145113f2de523baffac2f348b2e6bca439609018a789b9f1
//     &lt;/CumulativeHash&gt;
//   &lt;/Measurement&gt;
// ---

// swagger:operation POST /deploy/manifest Host deployManifest
// ---
//
// description: |
//   Deploys the application manifest to host which is then used to measure the application by the application agent.
//   A valid bearer token should be provided to authorize this REST call.
//
// security:
//  - bearerAuth: []
// consumes:
//  - application/xml
// parameters:
// - name: request body
//   in: body
//   required: true
//   description: |
//     The Manifest XML structure respresents the content of the request body which contains the following attributes:
//           - files                -   List of files can be explicitly specified for measurement.
//           - directories      -   A Directory defines measurement rules for measuring a directory.
//           - symlinks         -   A Symlink entry defines a symbolic link that will be measured.
//   schema:
//     type: string
// responses:
//   '200':
//     description: Successfully deployed the provided application manifest to host.
//
// x-sample-call-endpoint: https://trustagent.server.com:1443/v2/deploy/manifest
// x-sample-call-input: |
//  &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
//  &lt;Manifest xmlns="lib:wml:manifests:1.0" Label="New_Software_Flavor" Uuid="834076cd-f733-4cca-a417-113fac90adc7" DigestAlg="SHA384"&gt;
//    &lt;Dir Include=".*" Exclude="" Path="/opt/trustagent/hypertext/WEB-INF"/&gt;
//    &lt;Symlink Path="/opt/trustagent/bin/tpm_nvinfo"/&gt;
//    &lt;File Path="/opt/trustagent/bin/module_analysis_da.sh"/&gt;
//  &lt;/Manifest&gt;
// x-sample-call-output: |
//    200 Created
// ---
